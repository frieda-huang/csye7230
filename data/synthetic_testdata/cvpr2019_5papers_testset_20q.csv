,question,contexts,ground_truth,evolution_type,metadata,episode_done
0,"Here's a question that can be fully answered from the given context:

What is the purpose of defining an adaptive regularization parameter in the framework described?

Answer: The adaptive regularization parameter (αm,n) is defined to address the issue of negative transfer by scaling the SSA loss, thereby focusing on transferring positive knowledge between networks while avoiding negative transfer.","[',j,t\n\nℓm,n SSA = ρm,nkcorr(Fm) − corr(Fn)k2 F , where ρm,n is an adaptive regularization parameter deﬁned in Section 3.2.\n\nThe spatiotemporal semantic alignment loss is closely related to the covariance matrix alignment of the source and target feature maps in domain adaptation methods [41, 40]. In addition, in some style transfer methods, the Gram ma- trices of feature maps are aligned [15, 16]. Aligning the Gram matrices, as opposed to our approach, discards the positional information and aligns the styles. In contrast, our method aligns the positional and temporal information and discards the style.\n\nLet Fm, Fn ∈ RW ×H×T ×C be the in-depth feature maps of two networks corresponding to the mth modal- ity and nth modality, where W, H, T and C denote width, heights, the number of frames and channels of the feature maps, respectively. An in-depth feature map should contain\n\n3.2. Avoiding Negative Transfer\n\nAs discussed earlier, some modalities may provide weak features as compared to the others. In addition, even the strong modalities may sometimes have corrupted or hard\n\n1167\n\n(2)\n\n1.6\n\n1.4\n\n1.2\n\n1\n\n0.8\n\n0.6\n\n0.4\n\n0.2\n\n0\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n1.2\n\n1.4\n\n1.6\n\n1.8\n\n2\n\nFigure 3. The value of focal regularization parameter (ρm,n) when β = 2 for different values of classiﬁcation losses, ℓm cls. Proportional to the classiﬁcation performances of networks m and n, this parameter scales the SSA loss to focus on transferring pos- itive knowledge.\n\ncls and ℓn\n\nexamples in their training set. In these cases, aligning the spatiotemporal semantics of the representations from the other networks to the semantics of a week network may lead to a decrease in the performance. In such a case, a negative transfer has occurred. It is desirable to develop a method that produces positive knowledge transfer between the net- works while avoiding negative transfer. Such a method in our framework should enforce the networks to only mimic the semantics of more accurate networks in learning the rep- resentations for their hard examples. To address this issue, we regularize our SSA loss with an adaptive regularization parameter termed as focal regularization parameter. This parameter is denoted as ρm,n in equation (2).\n\nIn order to measure the performance of the network modalities, we can use their classiﬁcation loss values. As- sume ℓm cls are the classiﬁcation losses of the net- works m and n that respectively correspond to the mth and nth modalities. In addition, let ∆ℓ = ℓm cls be their difference. A positive ∆ℓ indicates that network n works better than network m. Hence, in training the network m, for large positive values of ∆ℓ, we want large values for ρm,n to enforce the network to mimic the representations of the network n. As ∆ℓ → 0+, network n becomes less an assist. Hence, we aim to have smaller ρm,ns to focus more on the classiﬁcation task. Finally, negative ∆ℓ indicates that the network n does not have better representations than the network m, and therefore ρm,n should be zero to avoid the negative transfer. To address these properties, we deﬁne the focal regularization parameter as follows\n\ncls and ℓn\n\ncls − ℓn\n\nρm,n = S(eβ∆ℓ − 1) =\n\n(cid:26)\n\neβ∆ℓ − 1 ∆ℓ > 0 ∆ℓ ≤ 0\n\n0\n\n(3)\n\nwhere β is a positive focusing parameter, and S(·) is the thresholding function at zero.\n\nFigure 3 visualizes values of ρm,n for various ℓn\n\nclss and ℓm cls ∈ [0, 2], when β = 2. As can be seen, the parameter is dynamically scaled, where the scaling factor decays to\n\nm']","The adaptive regularization parameter (αm,n) is defined to address the issue of negative transfer by scaling the SSA loss, thereby focusing on transferring positive knowledge between networks while avoiding negative transfer.",simple,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abavisani_Improving_the_Performance_of_Unimodal_Dynamic_Hand-Gesture_Recognition_With_Multimodal_CVPR_2019_paper.pdf'}],True
1,"Here is a question that can be fully answered from the given context, formed using the topic ""Latent space"":

Context: ...the overall architecture, depicted in (a), consists of a deep autoencoder and an autoregressive estimation network operating on its latent space.

Keyphrase: ""Latent space""

Question: What role do the deep autoencoder and autoregressive estimation network play in relation to the latent space?","['z; θh):\n\nf (x; θf ) : Rm → Rd,\n\ng(z; θg) : Rd → Rm,\n\nh(z; θh) : Rd → [0, 1].\n\nThe encoder processes input x and maps it into a com- pressed representation z = f (x; θf ), whereas the decoder provides a reconstructed version of the input ˜x = g(z; θg). The probabilistic model h(z; θh) estimates the density in z via an autoregressive process, allowing to avoid the adoption of a speciﬁc family of distributions (i.e., Gaussian), potentially unrewarding for the task at hand. On this latter point, please refer to supplementary materials for comparison w.r.t. variational autoencoders [17]. With such modules, at test time, we can assess the two sources of novelty: elements whose observation is poorly\n\n482\n\n(1)\n\n(2)\n\nDownsampling\n\nDc s\n\nUpsampling Uc s\n\nResidual Rc\n\n(a)\n\nLatent vector z\n\nmemory\n\nReconstruction error ||x – x||2\uf07e\n\nCout=c stride=s K=5\n\nBN\n\ncout=c stride=s k_size=3\n\nCout=c stride=s K=5\n\nBN\n\nCout=c stride=s K=5\n\nCout=c stride=1 K=5\n\nBN\n\nInput sample\n\nReconstruction\n\n(b)\n\nLocalization map\n\nNovelty score\n\nz0 z1 z2\n\nzd-1 zd\n\np(z0)\n\np(z1|z0)\n\np(z2|z1z2)\n\np(zd-1|z<d-1)\n\np(zd|z<d)\n\nz0 z1 z2\n\nzd-1 zd\n\nNovelty score\n\nLikelihood of latent vector - log P(z)\n\nsurprisal\n\nCout=c stride=1 K=3\n\nBN\n\n+\n\nBN\n\nCout=c stride=1 K=3\n\nBN\n\n+\n\nBN\n\nCout = c stride=1 K=3\n\nBN\n\n+\n\nVan enters\n\nEstimation network\n\nEstimated conditionals\n\nImage inputs:\n\nVideo inputs:\n\n2D tr. convolution\n\n3D tr. convolution\n\n2D convolution\n\n3D convolution\n\n(i)\n\n(ii)\n\nFigure 1: (i) The proposed novelty detection framework. The overall architecture, depicted in (a), consists of a deep au- toencoder and an autoregressive estimation network operating on its latent space. The joint minimization of their respective objective leads to a measure of novelty - (b) - obtained by assessing the remembrance of the model when looking to a new sample, combined with its surprise aroused by causal factors. (ii) Building blocks employed in the autoencoder’s architecture.\n\nexplained by the causal factors inducted by normal samples (i.e., high reconstruction error); elements exhibiting good reconstructions whilst showing surprising underlying representations under the learned prior.\n\nunderlying density, we design proper layers guaranteeing that the CPD of each symbol zi is computed from inputs {z1, . . . , zi−1} only.\n\nAutoregressive density estimation. Autoregressive models provide a general formulation for tasks involving sequential predictions, in which each output depends on previous observations [25, 29]. We adopt such a technique to factorize a joint distribution, thus avoiding to deﬁne its landscape a priori [21, 40]. Formally, p(z) is factorized as\n\nObjective and connection with differential entropy. The three components f , g and h are jointly trained to minimize L ≡ L(θf , θg, θh) as follows:\n\nL = LREC(θf , θg) + λLLLK(θf , θh)\n\n= Ex\n\n||x − ˜x||2\n\n− λ log(h(z; θh))\n\n,\n\n(4)\n\n(cid:20)\n\nreconstruction term\n\nlog-likelihood term (cid:21)\n\np(z) =\n\nd\n\ni=1 Y\n\np']","The deep autoencoder maps input x into a compressed representation z, whereas the autoregressive estimation network operates on its latent space to provide a reconstructed version of the input. The autoregressive process estimates the density in z via an autoregressive process.",simple,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abati_Latent_Space_Autoregression_for_Novelty_Detection_CVPR_2019_paper.pdf'}],True
2,"Here's a question that can be fully answered using the given context:

""According to the full objective for training modality networks, how does the SSA loss contribute to the overall loss function?","[' y t i l a d o M\n\nNetwork m\n\nT\n\nW\n\n…\n\nH\n\n) } C Channels\n\nlosses, `m cls networks Classification Loss\n\nand `n\n\ncls. m and\n\nin Fm\n\n, ρm,n overvie\n\nSSA Loss\n\nn y t i l a d o M\n\nNetwork n\n\nin Fn. T The\n\nW\n\n…\n\nH\n\n) } C Channels\n\nClassification Loss cls. m and\n\nand `n\n\nFigure 4. Training network m with the knowledge of network n. Training network m, is primarily done with respect to its classiﬁer loss (ℓm cls, ρm,n determines if involving the SSA loss is necessary, and if yes, it regularizes this loss with re- spect to the difference between the performances of two networks. Note that in the test time, both networks perform independently.\n\ncls), but comparing with ℓn\n\nzero as conﬁdence in the classiﬁcation performance of the current network modality increases (measured using ∆ℓ). This scaling factor can automatically down-weight the con- tribution of the shared knowledge if the performance of the modality network n is degraded (measured by ℓn\n\ncls).\n\nThe focal regularization parameter ρm,n is used as the regularization factor when aligning the correlation matrix of Fm in mth modality network to the correlation matrix of Fn in nth modality network.\n\n3.3. Full Objective of the Modality Networks\n\nCombining the aforementioned objectives, our full ob- jective for training the network corresponding to the mth modality in an M -modality task is as follows\n\nM\n\nℓm = ℓm\n\ncls + λ\n\nℓm,n SSA\n\nXn=1\n\nwhere λ is a positive regularization parameter. Note that for n = m, ρm,n = 0 and thus ℓm,n\n\nSSA = 0.\n\nFigure 4 shows an overview of how the representations for the nth modality affects on learning the representation in the mth modality. Since ρm,n is differentiable, the training can be done in an end-to-end manner.\n\nOur model encourages the networks to improve their rep- resentation learning in the training stage. During testing, each network performs separately. Thus, once the networks are trained, one can use an individual modality network to acquire efﬁcient recognition. However, it is worth men- tioning that with our framework, applying a decision level modality fusion in the test stage is also possible. In fact, our experiments show that the proposed method not only improves the performance of unimodal networks, but it can also improve the fusion performance.\n\n1168\n\n(4)\n\nB G R\n\nB G R\n\ntime\n\nB G R\n\ntime\n\nh t p e D\n\ntime\n\nh t p e D\n\ntime\n\nh t p e D\n\nl a c i t p O\n\nw o l F\n\n(b) Figure 5. Sample sequences from different modalities of used datasets. (a) VIVA hand gesture dataset [29]. (b) NVGesture dataset [26]. (c) EgoGesture [8, 51]. As can be seen, the modalities in VIVA and EgoGesture datasets are well-aligned, while the depth map is not quite aligned with RGB and Optical ﬂow maps in NVGesture.\n\n(a)\n\n(c)\n\n4. Experimental Results\n\nIn this section, we evaluate our method against state-of- the-art dynamic hand gesture methods. We conduct our ex- periments on three publicly available multimodal dynamic hand gesture datasets. The following datasets are used in our experiments.\n\nVIVA hand gestures dataset [29] is a multimodal dy- namic hand gesture dataset speciﬁcally designed with difﬁcult settings of cluttered background, volatile illu- mination, and frequent occlusion for studying natural human activities in real-world driving settings. This dataset was captured using a Microsoft Kinect device, and contains 885 visible RGB and depth video se- quences (RGB-D) of 19 hand gesture classes, collected from 8 subjects.\n\nEgoGesture dataset [8, 51] is a large multimodal hand gesture dataset collected for the task of egoc']","The SSA loss contributes to the overall loss function by being regularized with respect to the difference between the performances of two networks and is multiplied by a positive regularization parameter, making it a secondary component of the full objective for training modality networks.",simple,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abavisani_Improving_the_Performance_of_Unimodal_Dynamic_Hand-Gesture_Recognition_With_Multimodal_CVPR_2019_paper.pdf'}],True
3,"Here is a question that can be fully answered from the given context:

""What perspective does the term 'information geometric perspective' refer to in the context of the problem?""

This question directly asks for information presented in the context and requires no external knowledge.","['12)\n\n(cid:0)\n\nentropy of prior noise\n\nlocal geometry of the transformed space\n\nHx(q) =\n\nH(pz) z }| {\n\n+\n\nHg z}|{ det(J\n\n,\n\n1/2\n\n⊤ z Jz)\n\nEpz\n\nwhere Hg =\n\nlog\n\n−\n\nh\n\n(cid:12) (cid:12)\n\n(cid:12) (cid:12)\n\nwhere Jz is the Jacobian of gθg (the generator). Intuitively, this equality states that the entropy with respect to the distri- bution of the generated samples is the sum of two terms (1) the entropy of the noise prior which captures the informa- tion present in the noise distribution (speciﬁed by parameter θz) and (2) the expected local behavior in the transformed space (speciﬁed by parameter θg). From the information geometric perspective, the latter term captures the volume of the geometric space that the transformation function gθg produces.\n\ni\n\n(5)\n\nRemark 1. Explicitly constraining the generator to be in- vertible is infeasible, however, in practice we can use net- works with inverted architecture to mediate this. Further- more, when the matrix J ⊤ z Jz is full-rank, it indicates the mapping is one-to-one, i.e. there is an invertible function that maps samples from z to observation samples x.\n\nSince computing the log det term in Equation 5 is com- putationally expensive, we resort to an approximation that\n\n1This is merely for theoretical analysis. In practice, we don’t need to\n\nexplicitly deﬁne an invertible function\n\nis easier to optimize with stochastic gradient descent meth- ods. We utilize the following Lemma2:\n\nRd×d and Id the identity Lemma 2. For a matrix A ∈ matrix of size d where λ1(A) denotes the largest eigenvalue and λ1(A) < α we have\n\nlog det(A) = d log(α) +\n\n∞\n\nXk=1\n\n(\n\n−\n\n1)k+1 tr\n\nA/α\n\n(cid:16)(cid:0) k\n\n−\n\nId\n\n(cid:1)\n\nProof. Refer to the supplementary material.\n\nEmploying Lemma 2, we are able to substitute the com- putation of the determinant for a more efﬁcient alternative approximation. This approximation is arbitrarily close to the true value depending on the number of steps in the se- ries and the value chosen for α.\n\n3.2. Main Algorithm\n\nTaking the derivative of the normalizer w.r.t. the param- eter w1 in Equation 1 yields the ﬁrst moment of this dis- tribution, i.e. E[φ′(w2, x)] = ∂A(w) ∂w1 . Furthermore, the second derivative is the covariance (and in this case Fisher information specifying the sensitivity of the parameter to the input). As such, it matches the moments from the true distribution and its estimate with respect to the sufﬁcient statistics φ′(w2, x) when using maximum likelihood.\n\nPutting Equation 1, 3, 4 and 5 together, we have a max- min problem to solve for two sets of parameters: w and θ. Finding the saddle point solution for this problem is chal- lenging, as such, we employ an alternating optimization us- ing stochastic gradient descent to update the parameters w and θ iteratively, as\n\nw ← w + ηw∇w\n\nθ ← θ − ηg∇θ\n\nEp\n\nφ(w, x)\n\n− Epz\n\nφ(w, gθg (z))\n\n(cid:18)\n\nh φ(w, gθg (z))\n\ni\n\nh\n\nEpz\n\n+ H(pz) + Hg\n\n(cid:18)\n\nh\n\ni\n\ni(cid:19)\n\n(cid:19)\n\n,\n\nIn general, we need to optimize w at each step until conver- gence using the θ found in the previous iteration. In prac- tice, we use']",The information geometric perspective refers to the view that considers the volume of the geometric space produced by the transformation function gθg.,simple,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abbasnejad_A_Generative_Adversarial_Density_Estimator_CVPR_2019_paper.pdf'}],True
4,"Here is the question that can be fully answered from the given context:

""What types of modalities were used in experiments with the NVGestures dataset for dynamic hand gesture recognition?""

This question is answerable because the context provides information about the NVGestures dataset and the types of modalities (RGB, depth, optical flow) used in the experiments.","['entric ges- ture recognition. This dataset contains 24,161 hand gesture clips of 83 classes of gestures, performed by 50 subjects. Videos in this dataset include both static and dynamic gestures captured with an Intel RealSense SR300 device in RGB-D modalities across multiple in- door and outdoor scenes.\n\nexperiments. Note that the RGB and depth modalities are well-aligned in the VIVA and EgoGesture datasets, but are not completely aligned in the NVGestures dataset.\n\nFor all the datasets, we compare our method against two state-of-the-art action recognition networks, I3D [9] and C3D [44], as well as state-of-the-art dynamic hand gesture recognition methods that were reported on the used datasets. In the tables, we report the results of our method as “Multi- modal Training Unimodal Testing” (MTUT). Implementation Details: In the design of our method, we adopt the architecture of I3D network as the backbone net- work of our modality networks, and employ its suggested implementation details [9]. This network is an inﬂated ver- sion of Inception-V1 [18], which contains several 3D con- volutional layers followed with 3D max-pooling layers and inﬂated Inception-V1 submodules. The detailed architec- ture can be found in [9]. We select the output of the last in- ﬂated Inception submodule, “Mixed 5c”, as the in-depth feature map in our modality networks for applying the SSA loss (2). In all the experiments λ is set to 50 × 10−3, and β = 2. The threshold function in the focal regularization parameter is implemented by a ReLu layer. For all the ex- periments with our method and I3D benchmarks, unless otherwise stated, we start with the publicly available Ima- geNet [12] + Kinetics [20] pre-trained networks.\n\nNVGestures dataset [26] has been captured with mul- tiple sensors and from multiple viewpoints for study- ing human-computer interfaces. It contains 1532 dy- namic hand gestures recorded from 20 subjects inside a car simulator with artiﬁcial lighting conditions. This dataset includes 25 classes of hand gestures. The ges- tures were recorded with SoftKinetic DS325 device as the RGB-D sensor and DUO-3D for the infrared streams. In addition, the optical ﬂow and infrared dis- parity map modalities can be calculated from the RGB and infrared streams, respectively. We use RGB, depth and optical ﬂow modalities in our experiments. Note that IR streams in this dataset do not share the same view with RGB, depth and optical ﬂow modalities. The optical ﬂow is calculated using the method pre- sented in [14]. 1169\n\nNVGestures dataset [26] has been captured with mul- tiple sensors and from multiple viewpoints for study- ing human-computer interfaces. It contains 1532 dy- namic hand gestures recorded from 20 subjects inside a car simulator with artiﬁcial lighting conditions. This dataset includes 25 classes of hand gestures. The ges- tures were recorded with SoftKinetic DS325 device as the RGB-D sensor and DUO-3D for the infrared streams. In addition, the optical ﬂow and infrared dis- parity map modalities can be calculated from the RGB and infrared streams, respectively. We use RGB, depth and optical ﬂow modalities in our experiments. Note that IR streams in this dataset do not share the same view with RGB, depth and optical ﬂow modalities. The optical ﬂow is calculated using the method pre- sented in [14]. 1169\n\nFigure 5 (a), (b), and (c) show sample frames from the different modalities of these datasets that are used in our\n\nWe set the momentum to 0.9, and optimize the objective function with the standard SGD optimizer. We start with the base learning rate of 10−2 with a 10× reduction when the loss is saturated. We use a batch size of 6 containing 64-frames snippets in the training stage. The models were implemented in Tensor-Flow 1.9 [1]. For our method, we start with a stage of pretraining with only applying the clas- siﬁcation losses on the modality networks for 60 epochs, and then continue training with the SSA loss for another 15 epochs.\n\nMethod HOG+HOG2 [29] CNN:LRN [24] C3D [44] I3D [9] MTUT (ours)\n\nTesting modality RGB']","The types of modalities used in experiments with the NVGestures dataset for dynamic hand gesture recognition are RGB, depth, and optical flow.",simple,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abavisani_Improving_the_Performance_of_Unimodal_Dynamic_Hand-Gesture_Recognition_With_Multimodal_CVPR_2019_paper.pdf'}],True
5,"Here's a question that can be fully answered from the given context, using the keyphrase ""Computer vision"":

""Which algorithms are used to compute visual codes in the proposed computer vision technique?""

This question is answerable because it specifically asks about the algorithms mentioned in the context as being used for computing visual codes.","[' are based on the available cap- tions in the datasets. We truncate a sentence if its length ex- ceeds the set limit, and zero pad in the case of shorter length. We tune the hyper-parameters of our language model on the validation set. The results below use two layers of GRUs, that employ 0.5 as the dropout value. We use the RMSProp algorithm with a learning rate 2 × 10−4 to train the models. A batch size of 60 is used for training in our experiments. We performed training of our models for 50 epochs. We used the sparse cross entropy loss to train our model. The training is conducted using NVIDIA Titan XP 1080 GPU. We used TensorFlow framework for development.\n\n4.3.1 Results on MSVD dataset\n\nWe comprehensively benchmark our method against the current state-of-the-art in video captioning. We report the results of the existing methods and our approach in Table. 1. For the existing techniques, recent best performing methods are chosen and their results are directly taken from the ex- isting literature (same evaluation protocol is ensured). The table columns present scores for the metrics BLEU-4 (B-4), METEOR (M), CIDErD (C) and ROUGEL (R).\n\nThe last seven rows of the Table report results of dif- ferent variants of our method to highlight the contribution of various components of the overall technique. GRU-MP indicates that we use our two-layer GRU model, while the common ‘Mean Pooling (MP)’ strategy is adopted to re- solve the temporal dimension of videos. ‘C3D’ and ‘IRV2’ in the parentheses identify the networks used to compute the visual codes. We abbreviate the joint use of C3D and IRV2 as ‘CI’. We use ‘EVE’ to denote our Enriched Visual Encoding that applies Hierarchical Fourier Transform - in- dicated by the subscript ‘hft’ - on the activations of the net- work extraction layers. The proposed ﬁnal technique, that\n\n1Due to through evaluation, supplementary material also contains fur-\n\nther results. Only the best performing setting is discussed here.\n\n12492\n\nTable 1. Benchmarking on MSVD dataset [11] in terms of BLEU- 4 (B-4), METEOR (M), CIDErD (C) and ROUGEL (R). See the text for the description of proposed method GRU-EVE’s variants.\n\nModel\n\nB-4\n\nM\n\nC\n\nFGM [47] S2VT [50] LSTM-YT [51] Temporal-Attention (TA) [59] h-RNN [60] MM-VDN [56] HRNE [32] GRU-RCN [6] LSTM-E [33] SCN-LSTM [18] DMRM [58] LSTM-TSA [34] TDDF [61] BAE [8] PickNet [13] aLSTMs [19] M3-IC [54] RecNetlocal [52] GRU-MP - (C3D) GRU-MP - (IRV2) GRU-MP - (CI) GRU-EVEhft - (C3D) GRU-EVEhft - (IRV2) GRU-EVEhft - (CI) GRU-EVEhft+sem - (CI)\n\n13.7 - 33.3 41.9 49.9 37.6 43.8 47.9 45.3 51.1 51.1 52.8 45.8 42.5 46.1 50.8 52.8 52.3\n\n28.8 41.4 41.0 40.6 45.6 47.8 47.9\n\n23.9 29.2 29.1 29.6 32.6 29.0 33.1 31.1 31.0 33.5 33.6 33.5 33.3 32.4 33.1 33.3 33.3 34.1\n\n27.7 32.3 31.3 31.0 33.7 34.7 35.0\n\n- - 51.67 65.8 - - 67.8 - 77.7 74.8 74.0 73.0 63.5 76.0 74.8 - 80.3 42.6 68.2 61.9 55.7 74.2 75.8 78.1\n\nalso incorporates the high-level semantic information - in- dicated by the subscript ‘+sem’ - is mentioned']","The proposed computer vision technique uses C3D and IRV2 networks to compute the visual codes. C3D and IRV2 are used individually, or jointly as CI (C3D and IRV2), depending on the variant of the method.",simple,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Aafaq_Spatio-Temporal_Dynamics_and_Semantic_Attribute_Enriched_Visual_Encoding_for_Video_CVPR_2019_paper.pdf'}],True
6,"Which event ties refs [54] & [57], but not ref [59]?","[' Wu, and J. Yuan. Learning actionlet en- semble for 3d human action recognition. IEEE transactions on pattern analysis and machine intelligence, 36(5):914– 927, 2014. 4\n\n[54] J. Wang, W. Wang, Y. Huang, L. Wang, and T. Tan. M3: Multimodal memory modelling for video captioning. In Pro- ceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 7512–7520, 2018. 2, 3, 6, 7, 8\n\n[55] J. Wang, T. Zhang, N. Sebe, H. T. Shen, et al. A survey on learning to hash. IEEE transactions on pattern analysis and machine intelligence, 40(4):769–790, 2018. 1\n\n[56] H. Xu, S. Venugopalan, V. Ramanishka, M. Rohrbach, and K. Saenko. A multi-scale multiple instance video description network, A Workshop on Closing the Loop Between Vision and Language at ICCV 2015. 7\n\n[57] J. Xu, T. Mei, T. Yao, and Y. Rui. Msr-vtt: A large video description dataset for bridging video and language. In IEEE CVPR, 2016. 1, 2, 5, 6, 7, 8\n\n[58] Z. Yang, Y. Han, and Z. Wang. Catching the temporal regions-of-interest for video captioning. In 25th ACM Mul- timedia, pages 146–153, 2017. 7\n\n[59] L. Yao, A. Torabi, K. Cho, N. Ballas, C. Pal, H. Larochelle, and A. Courville. Describing videos by exploiting temporal structure. In Proceedings of the IEEE international confer- ence on computer vision, pages 4507–4515, 2015. 3, 6, 7 [60] H. Yu, J. Wang, Z. Huang, Y. Yang, and W. Xu. Video paragraph captioning using hierarchical recurrent neural net- works. In IEEE CVPR, 2016. 1, 7\n\n[61] X. Zhang, K. Gao, Y. Zhang, D. Zhang, J. Li, and Q. Tian. Task-driven dynamic fusion: Reducing ambiguity in video description. In IEEE CVPR, 2017. 7, 8\n\n[62] L. Zhu, Z. Xu, and Y. Yang. Bidirectional multirate recon- struction for temporal modeling in videos. In IEEE CVPR, pages 2653–2662, 2017. 7\n\n12496']",The answer to given question is not present in context,reasoning,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Aafaq_Spatio-Temporal_Dynamics_and_Semantic_Attribute_Enriched_Visual_Encoding_for_Video_CVPR_2019_paper.pdf'}],True
7,"Here is a rewritten question that conveys the same meaning but in a less direct manner:

""What combines generative models with anomaly detection for crowded scene analysis?""

I used abbreviations like ""generative models"" (GM) and focused on key concepts to make the question shorter while retaining its essence. Let me know if you'd like any further adjustments!","[', 2017. 1, 2, 6, 7\n\n[28] Vijay Mahadevan, Weixin Li, Viral Bhalodia, and Nuno Vas- concelos. Anomaly detection in crowded scenes. In IEEE International Conference on Computer Vision and Pattern Recognition, pages 1975–1981. IEEE, 2010. 2, 7\n\n[29] Aaron van den Oord, Sander Dieleman, Heiga Zen, Karen Simonyan, Oriol Vinyals, Alex Graves, Nal Kalchbrenner, Andrew Senior, and Koray Kavukcuoglu. Wavenet: A gener- ative model for raw audio. arXiv preprint arXiv:1609.03499, 2016. 3\n\n[30] Andrea Palazzi, Davide Abati, Simone Calderara, Francesco Solera, and Rita Cucchiara. Predicting the driver’s focus of attention: the dr(eye)ve project. IEEE Transactions on Pat- tern Analysis and Machine Intelligence, 2018. 8\n\n[31] Deepak Pathak, Pulkit Agrawal, Alexei A Efros, and Trevor Darrell. Curiosity-driven exploration by self-supervised pre-\n\n489\n\ndiction. In International Conference on Machine Learning, volume 2017, 2017. 1\n\n[32] Mahdyar Ravanbakhsh, Enver Sangineto, Moin Nabi, and Nicu Sebe. Training adversarial discriminators for cross- channel abnormal event detection in crowds. arXiv preprint arXiv:1706.07680, 2017. 2\n\n[33] Mohammad Sabokrou, Mohsen Fayyaz, Mahmood Fathy, Zahra. Moayed, and Reinhard Klette. Deep-anomaly: Fully convolutional neural network for fast anomaly detection in crowded scenes. Computer Vision and Image Understand- ing, 2018. 2\n\n[34] Mohammad Sabokrou, Mohammad Khalooei, Mahmood Fathy, and Ehsan Adeli. Adversarially learned one-class classiﬁer for novelty detection. In IEEE International Con- ference on Computer Vision and Pattern Recognition, pages 3379–3388, 2018. 1, 2\n\n[35] Thomas Schlegl, Philipp Seeb¨ock, Sebastian M Waldstein, Ursula Schmidt-Erfurth, and Georg Langs. Unsupervised anomaly detection with generative adversarial networks to guide marker discovery. In International Conference on In- formation Processing in Medical Imaging, pages 146–157. Springer, 2017. 1, 2, 5\n\n[36] Bernhard Sch¨olkopf, Robert C Williamson, Alex J Smola, John Shawe-Taylor, and John C Platt. Support vector method for novelty detection. In Neural Information Processing Sys- tems, 2000. 5\n\n[37] Lucas Theis, A¨aron van den Oord, and Matthias Bethge. A note on the evaluation of generative models. International Conference on Learning Representations, 2016. 5\n\n[38] Jakub M Tomczak and Max Welling. Vae with a vamp prior. International Conference on Artiﬁcial Intelligence and Statistics, 2018. 2\n\n[39] Myron Tribus. Thermostatics and thermodynamics: an in- troduction to energy, information and states of matter, with engineering applications. van Nostrand, CS7, 1961. 1, 2 [40] Benigno Uria, Iain Murray, and Hugo Larochelle. Rnade: The real-valued neural autoregressive density-estimator. In Advances in Neural Information Processing Systems, pages 2175–2183, 2013. 3\n\n[41] Benigno Uria, Iain Murray, and Hugo Larochelle. A deep and tractable density estimator. In International Conference on Machine Learning, pages 467–475, 2014. 3\n\n[42] A. van den Oord, N. Kalchbrenner, L. Espeholt, O. Vinyals, and A. Graves. Conditional image generation with pixelcnn decoders. In Neural Information Processing Systems, 2016. 3, 5\n\n[43] A. van den Oord, Nal Kalchbrenner,\n\nKavukcuoglu. Pixel recurrent neural networks. national Conference on Machine Learning, 2016. 3\n\nand Koray Inter-\n\n[44] Matthew D Zeiler and Rob Fergus. Visualizing and under- In European Conference\n\nstanding convolutional networks. on Computer Vision, pages 818–833. Springer, 2014. 7 [45] Bin Zhao, Li Fei-Fei, and Eric P Xing. Online detection of unusual']",The answer to given question is not present in context,reasoning,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abati_Latent_Space_Autoregression_for_Novelty_Detection_CVPR_2019_paper.pdf'}],True
8,"During normative pattern modeling, what does a good encoding scheme look like?","[' elements (and is employed only as the ﬁrst estimator layer), whereas type B masks only succeeding elements. Assuming each CPD modeled as a multinomial, the output of the last au- toregressive layer (in Rd×B) provides probability estimates for the B bins that compose the space quantization. On the other hand, the compressed representation of video clips has dimensionality t × d, being t the number of tem- poral time-steps and d the length of the code. Accord- ingly, the estimation network is designed to capture two- dimensional patterns within observed elements of the code. However, naively plugging 2D convolutional layers would assume translation invariance on both axes of the input map, whereas, due to the way the compressed representation is built, this assumption is only correct along the temporal axis. To cope with this, we apply d different convolutional kernels along the code axis, allowing the observation of the whole feature vector in the previous time-step as well as a portion of the current one. Every convolution is free to stride along the time axis and captures temporal patterns. In such operation, named Masked Stacked Convolution (MSC, Fig. 3-(b)), the i-th convolution is equipped with a kernel w(i) ∈ R3×d kernel, that gets multiplied by the binary mask M(i), deﬁned as\n\nabout the encoder as a source emitting symbols (namely, the latent representations), its desired behavior, when mod- eling normal aspects in the data, should converge to a ‘bor- ing’ process characterized by an intrinsic low entropy, since surprising and novel events are unlikely to arise during the training phase. Accordingly, among all the possible set- tings of the hidden representations, the objective begs the encoder to exhibit a low differential entropy, leading to the extraction of features that are easily predictable, therefore common and recurrent within the training set. This kind of features is indeed the most useful to distinguish novel sam- ples from the normal ones, making our proposal a suitable regularizer in the anomaly detection setting. We report empirical evidence of the decreasing differential entropy in Fig. 2, that compares the behavior of the same model under different regularization strategies.\n\n3.1. Architectural Components\n\nAutoencoder blocks. Encoder and decoder are respec- tively composed by downsampling and upsampling residual blocks depicted in Fig. 1ii. The encoder ends with fully connected (FC) layers. When dealing with video inputs, we employ causal 3D convolutions [2] within the encoder (i.e., only accessing information from previous time- steps). Moreover, at the end of the encoder, we employ a temporally-shared full connection (TFC, namely a linear projection sharing parameters across the time axis on the input feature maps) resulting in a temporal series of feature vectors. This way, the encoding procedure does not shufﬂe information across time-steps, ensuring temporal ordering.\n\nif j = 0 if j = 1 and k < i and type=A if j = 1 and k ≤ i and type=B otherwise,\n\n1 1 1 0\n\nm(i)\n\nj,k ∈ M(i) = \uf8f1 \uf8f4\uf8f4\uf8f4\uf8f2 \uf8f4\uf8f4\uf8f4\uf8f3\n\n(7)\n\nwhere j indexes the temporal axis and k the code axis. Every single convolution yields a column vector, as a result of its stride along time. The set of column vectors resulting\n\nAutoregressive layers. To guarantee the autoregres- sive nature of each output CPD, we need to ensure proper\n\n484\n\nINPUT\n\nMSC\n\nOUTPUT\n\nINPUT ci\n\nMFC\n\nOUTPUT co\n\nd\n\nd\n\nd\n\nd\n\nci\n\nt\n\n…\n\nt\n\nco\n\n(a)\n\n(b)\n\nFigure 3: Proposed autoregressive layers, namely the Masked Fully Connection (a, Eq. 6) and the Masked Stacked Convolu- tion (b, Eq. 7). For both layers, we represent type A structure. Different kernel colors represent different parametrizations.\n\nfrom the application of the d convolutions to the input tensor h ∈ Rt×d×ci are horizontally stacked to build the output tensor o ∈ Rt×d×co, as follows:\n\nvalidation purposes, and employ it as the normalization set (S in Eq. 9) for the computation of the novelty score. As for the baselines, we consider the following:\n\no =\n\nd\n\n||\n\ni=']",A good encoding scheme in normative pattern modeling should extract features that are easily predictable and common within the training set.,reasoning,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abati_Latent_Space_Autoregression_for_Novelty_Detection_CVPR_2019_paper.pdf'}],True
9,"What dataset blurs visual differences?""

Note: I've preserved the essence of the original question, which is about identifying a dataset that presents challenges with visually discriminable data. The rewritten question uses abbreviations (""dataset"" and ""visual"") to make it shorter while still conveying the same meaning in a less direct manner.","[' learning rule deﬁned as a function of the perceptual prediction error deﬁned in Section 3.2 and is deﬁned as\n\nλlearn = \uf8f1 \uf8f4\uf8f2\n\n− t λinit, EP (t) > µe t λinit, EP (t) < µe otherwise\n\n∆ ∆+ λinit,\n\n\uf8f4\uf8f3\n\n− t , ∆+\n\nt and λinit refer to the scaling of the learning where ∆ rate in the negative direction, positive direction and the ini- t2 tial learning rate respectively and µe = 1 t1 EP dEP . The learning rate is adjusted based on the quality of the predictions characterized by the perceptual prediction er- ror between a temporal sequence between times t1 and t2, typically deﬁned by the gating signal.. The impact of the adaptive changes to the learning rate is shown in the quan- titative evaluation Section 4.4, where the adaptive learn- ing scheme shows improvement of up to 20% compared to training without the learning scheme.\n\nt2−t1\n\nR\n\n3.5. Implementation Details\n\nIn our experiments, we use a VGG-16 [31] network pre- trained on ImageNet as our hierarchical, feature encoder module. We discard the ﬁnal layer and use the second fully connected layer with 4096 units as our encoded feature vec- tor for a given frame. The feature vector is then consumed by a predictor model. We trained two versions, one with an RNN and the other with an LSTM as our predictor mod- els. The LSTM model used is the original version proposed by [15]. Finally, the anomaly detection module runs an av- erage low pass ﬁlter described in Section 3.3. The initial learning rate described in Section 3.4 is set to be 1 × 10−6. t are set to be 1 × 10−2 and The scaling factors ∆ 1×10−3, respectively. The training was done on a computer with one Titan X Pascal.\n\n− t and ∆+\n\n4. Experimental Evaluation\n\n4.1. Datasets\n\nWe evaluate and analyze the performance of the pro- posed approach on three large, publicly available datasets - Breakfast Actions [19], INRIA Instructional Videos dataset[3] and the 50 Salads dataset [32]. Each dataset of- fers a different challenge to the approach allow us to evalu- ate its performance on a variety of challenging conditions. Breakfast Actions Dataset is a large collection of 1,712 videos of 10 breakfast activities performed by 52 actors.\n\n1201\n\n(7)\n\nBG Take Bowl\n\nPour Cereals\n\nPour Milk\n\nStir Cereals\n\nBG\n\nGround truth\n\nHTK\n\nECTC\n\nOCDC\n\nOurs (LSTM + AL)\n\nFigure 3: Illustration of the segmentation performance of the proposed approach on the Breakfast Actions Dataset on a video with ground truth Make Cereals. The proposed approach does not show the tendency to over-segment and provides coherent segmentation. The approach, however, shows a tendency to take longer to detect boundaries for visually similar activities.\n\nEach activity consists of multiple sub-activities that pos- sess visual and temporal variations according to the sub- ject’s preferences and style. Varying qualities of visual data as well as complexities such as occlusions and viewpoints increase the complexity of the temporal segmentation task. INRIA Instructional Videos Dataset contains 150 videos of 5 different activities collected from YouTube. Each of the videos are, on average, 2 minutes long and have around 47 sub-activities. There also exists a “background activities” which consists of sequence where there does not exist a clear sub-activity that is visually discriminable. This offers a considerable challenge for approaches that are not explicitly trained for such visual features.\n\n50 Salads Dataset is a multimodal data collected in the cooking domain. The datasets contains over four (4) hours of annotated data of 25 people preparing 2 mixed salads each and provides data in different modalities such as RGB frames, depth maps and accelerometer data for devices at- tached to different items such as knives, spoons and bottles to name a few. The annotations of activities are provided at different levels of granularities - high, low and eval. We use the “eval” granularity following evaluation protocols in prior works [21, 27].\n\nevaluate the quality of the temporal segmentation. The eval- uation protocol for the recognition task in Section 4.4.1 is the unit level accuracy for the 48 classes as seen in Table']","INRIA Instructional Videos Dataset blurs visual differences, as it contains background activities where there does not exist a clear sub-activity that is visually discriminable.",reasoning,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Aakur_A_Perceptual_Prediction_Framework_for_Self_Supervised_Event_Segmentation_CVPR_2019_paper.pdf'}],True
10,What neural network architecture links GRUs across multiple layers?,"[' q}, where ‘N ’ is the allowed maximum number of the same class of objects detected in a frame. We let N = 10 in experiments.\n\nN\n\nνz\n\ny = ˜yz+1 − i = [δz ˜yz. Here, ˜x, ˜y denote the Expected values of the x and y coordinates of the same type of objects in a given frame, such that the coordinates are also normalized by the respective frame dimensions.\n\nx, δz\n\ny] : δz\n\nx = ˜xz+1 − ˜xz and δz\n\nWe let q = 5 in our experiments, resulting in ζi ∈ R10, ∀i that compose γ ∈ R(10×|L|)×1. The indices of co- efﬁcients in γ identify the object labels in videos (i.e. prob- able nouns to appear in the description). Unless an object is detected in the video, the coefﬁcients of γ corresponding to it are kept zero. The proposed embedding of high level semantics in γ contain highly relevant information about objects in explicit form for a sequence learning module of video description system.\n\nActions Information: Videos generally record objects and their interaction. The latter is best described by the actions performed in the videos. We already use a 3D CNN that learns action descriptors for the videos. We tap into the output layer of that network to further em- bed high level action information in our visual encoding. To that end, we compute A = A T D, where A is the e set of labels at the output of the 3D CNN. Then, we de- ﬁne η = (cid:2)[ϑ1, Pr(ℓ1)], [ϑ2, Pr(ℓ2)], ..., [ϑ|A|, Pr(ℓ|A|)](cid:3) ∈ R(2×|A|)×1, where ℓi is the ith element of A (an action la- bel) and ϑ is a binary variable that is 1 only if the action is predicted by the network.\n\nWe concatenate the above described vectors α, β, γ and η to form our visual encoding vector v ∈ Rd, where d = 2×(p×7×m)+(10×|L|)+(2×|A|). Before passing this vector to a sequence modelling component of our method, we perform its compression using a fully connected layer, as shown in Fig. 1. Using tanh activation function and ﬁxed weights, this layer projects ‘v’ to a 2K-dimensional space. The resulting projection ‘υ’ is used by our language model.\n\n3.2. Sequence Modelling\n\nWe follow the common pipeline of video description techniques that feeds visual representation of a video to a sequence modelling component, see Fig. 1. Instead of re- sorting to a sophisticated language model, we develop a rel- atively simpler model employing multiple layers of Gated Recurrent Units (GRUs) [14]. GRUs are known to be more robust to vanishing gradient problem - an issue encountered in long captions - due to their ability of remembering the relevant information and forgetting the rest over time. A GRU has two gates: reset Γr and update Γu, where the up- date gate decides how much the unit updates its previous memory and the reset gate determines how to combine the new input with the previous memory. Concretely, our lan- guage model computes the hidden state h<t> of a GRU as:\n\nΓu = σ(Wu[h<t−1>, x<t>] + bu)\n\nΓr = σ(Wr[h<t−1>, x<t>] + br)\n\n˜h<t> = tanh (Wh[Γr ⊙ h<t−1>, x<t>] + bh\n\nh<t> = Γu ⊙ ˜h<t> + (1 − Γu) ⊙ h<t−1> where, ⊙ denotes the hadamard product, σ(.) is sigmoid ac- tivation , Wq, ∀q are learnable weight matrices, and bu/r/h denote the respective biases. In our approach, h<0> = υ for a given video, whereas the signal x is the word em- bedding vector. In Section 4.3, we report results using two layers of GRUs, and demonstrate that our language model under the proposed straightforward sequence modelling al-']",The answer to given question is not present in context,reasoning,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Aafaq_Spatio-Temporal_Dynamics_and_Semantic_Attribute_Enriched_Visual_Encoding_for_Video_CVPR_2019_paper.pdf'}],True
11,Which GAN paper links to inference methods via adversarial learning?,"['dinov. tance weighted autoencoders. 09 2015. 6\n\nImpor-\n\n[10] A. Das, S. Kottur, K. Gupta, A. Singh, D. Yadav, J. M. In Moura, D. Parikh, and D. Batra. Visual Dialog. Proceedings of the IEEE Conference on Computer Vi- sion and Pattern Recognition (CVPR), 2017. 2, 7, 8\n\n[11] P. J. Diggle and R. J. Gratton. Monte Carlo methods of inference for implicit statistical models. Journal of the Royal Statistical Society., pages 193–227, 1984. 1 [12] L. Dinh, D. Krueger, and Y. Bengio. Nice: Non- linear independent components estimation. CoRR, abs/1410.8516, 2014. 1, 4\n\n[13] L. Dinh, J. Sohl-Dickstein, and S. Bengio. Density\n\nestimation using real nvp. 2016. 1, 4\n\n[14] V. Dumoulin, I. Belghazi, B. Poole, O. Mastropietro, A. Lamb, M. Arjovsky, and A. Courville. Adversari- ally learned inference. In International Conference on Learning Representation, 2017. 5\n\n[15] M. Ehsan Abbasnejad, A. Dick, and A. van den Hengel. Inﬁnite variational autoencoder for semi- supervised learning. In Proceedings of the IEEE Con- ference on Computer Vision and Pattern Recognition, pages 5888–5897, 2017. 2\n\n[16] I. J. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley, S. Ozair, A. Courville, and Y. Ben- gio. Generative adversarial nets. In International Con- ference on Neural Information Processing Systems, 2014. 1, 2\n\n[17] K. Gregor, I. Danihelka, A. Mnih, C. Blundell, and D. Wierstra. Deep autoregressive networks. In The In- ternational Conference on Machine Learning (ICML), 2014. 1, 6\n\n[18] A. Grover, M. Dhar, and S. Ermon. Flow-gan: Com- bining maximum likelihood and adversarial learning In Proceedings of the Thirty- in generative models. Second AAAI Conference on Artiﬁcial Intelligence, (AAAI-18), the 30th innovative Applications of Arti- ﬁcial Intelligence (IAAI-18), and the 8th AAAI Sym- posium on Educational Advances in Artiﬁcial Intel- ligence (EAAI-18), New Orleans, Louisiana, USA, February 2-7, 2018, pages 3069–3076, 2018. 2, 4\n\n[19] I. Gulrajani, F. Ahmed, M. Arjovsky, V. Dumoulin, and A. C. Courville. Improved training of wasserstein gans. CoRR, abs/1704.00028, 2017. 2, 6\n\n[20] M. U. Gutmann, R. Dutta, S. Kaski, and J. Corander. Likelihood-free inference via classiﬁcation. Statistics and Computing, 2018. 1\n\n[21] E. Jang, S. Gu, and B. Poole. Categorical reparame-\n\nterization with gumbel-softmax. CoRR, 11 2016. 7\n\n[22] T. Karras, T. Aila, S. Laine, and J. Lehtinen. Pro- gressive growing of gans for improved quality, stabil- ity, and variation. In The International Conference on Learning Representations (ICLR), 2017. 1, 2, 6\n\n[23] D. P. Kingma and M. Welling. Auto-encoding vari- In The International Conference on\n\national bayes. Learning Representations (ICLR), 2014. 1, 2, 6\n\n[24] A. Kolesnikov and C. H. Lampert. PixelCNN models with auxiliary variables for natural image modeling. In D. Precup and Y. W. Teh, editors, Proceedings of the 34th International Conference on Machine Learn- ing, volume 70 of Proceedings of Machine Learning Research, pages 1905–1914, International Convention Centre, Sydney, Australia, 06–11 Aug 2017. PMLR. 6\n\n[25] V. R. Konda and J. N. Tsits']",The answer to given question is not present in context,reasoning,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abbasnejad_A_Generative_Adversarial_Density_Estimator_CVPR_2019_paper.pdf'}],True
12,How does combining 3 components' losses impact the model's overall optimization?,"['z; θh):\n\nf (x; θf ) : Rm → Rd,\n\ng(z; θg) : Rd → Rm,\n\nh(z; θh) : Rd → [0, 1].\n\nThe encoder processes input x and maps it into a com- pressed representation z = f (x; θf ), whereas the decoder provides a reconstructed version of the input ˜x = g(z; θg). The probabilistic model h(z; θh) estimates the density in z via an autoregressive process, allowing to avoid the adoption of a speciﬁc family of distributions (i.e., Gaussian), potentially unrewarding for the task at hand. On this latter point, please refer to supplementary materials for comparison w.r.t. variational autoencoders [17]. With such modules, at test time, we can assess the two sources of novelty: elements whose observation is poorly\n\n482\n\n(1)\n\n(2)\n\nDownsampling\n\nDc s\n\nUpsampling Uc s\n\nResidual Rc\n\n(a)\n\nLatent vector z\n\nmemory\n\nReconstruction error ||x – x||2\uf07e\n\nCout=c stride=s K=5\n\nBN\n\ncout=c stride=s k_size=3\n\nCout=c stride=s K=5\n\nBN\n\nCout=c stride=s K=5\n\nCout=c stride=1 K=5\n\nBN\n\nInput sample\n\nReconstruction\n\n(b)\n\nLocalization map\n\nNovelty score\n\nz0 z1 z2\n\nzd-1 zd\n\np(z0)\n\np(z1|z0)\n\np(z2|z1z2)\n\np(zd-1|z<d-1)\n\np(zd|z<d)\n\nz0 z1 z2\n\nzd-1 zd\n\nNovelty score\n\nLikelihood of latent vector - log P(z)\n\nsurprisal\n\nCout=c stride=1 K=3\n\nBN\n\n+\n\nBN\n\nCout=c stride=1 K=3\n\nBN\n\n+\n\nBN\n\nCout = c stride=1 K=3\n\nBN\n\n+\n\nVan enters\n\nEstimation network\n\nEstimated conditionals\n\nImage inputs:\n\nVideo inputs:\n\n2D tr. convolution\n\n3D tr. convolution\n\n2D convolution\n\n3D convolution\n\n(i)\n\n(ii)\n\nFigure 1: (i) The proposed novelty detection framework. The overall architecture, depicted in (a), consists of a deep au- toencoder and an autoregressive estimation network operating on its latent space. The joint minimization of their respective objective leads to a measure of novelty - (b) - obtained by assessing the remembrance of the model when looking to a new sample, combined with its surprise aroused by causal factors. (ii) Building blocks employed in the autoencoder’s architecture.\n\nexplained by the causal factors inducted by normal samples (i.e., high reconstruction error); elements exhibiting good reconstructions whilst showing surprising underlying representations under the learned prior.\n\nunderlying density, we design proper layers guaranteeing that the CPD of each symbol zi is computed from inputs {z1, . . . , zi−1} only.\n\nAutoregressive density estimation. Autoregressive models provide a general formulation for tasks involving sequential predictions, in which each output depends on previous observations [25, 29]. We adopt such a technique to factorize a joint distribution, thus avoiding to deﬁne its landscape a priori [21, 40]. Formally, p(z) is factorized as\n\nObjective and connection with differential entropy. The three components f , g and h are jointly trained to minimize L ≡ L(θf , θg, θh) as follows:\n\nL = LREC(θf , θg) + λLLLK(θf , θh)\n\n= Ex\n\n||x − ˜x||2\n\n− λ log(h(z; θh))\n\n,\n\n(4)\n\n(cid:20)\n\nreconstruction term\n\nlog-likelihood term (cid:21)\n\np(z) =\n\nd\n\ni=1 Y\n\np']",The answer to given question is not present in context,reasoning,[{'source': '/Users/friedahuang/Documents/csye7230/data/test_sources/pdfs/Abati_Latent_Space_Autoregression_for_Novelty_Detection_CVPR_2019_paper.pdf'}],True
